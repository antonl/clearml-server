fixed_users {
  guest {
    enabled: false

    default_company: "025315a9321f49f8be07f5ac48fbcf92"

    name: "Guest"
    username: "guest"
    password: "guest"

    # Allow access only to the following endpoints when using user/pass credentials
    allow_endpoints: [
      "auth.login"
    ]
  }
}

# SSO provider configuration
sso {
  # Set to true to enable SSO 
  enabled: false
  
  # Configure OIDC providers
  providers {
    # Example: Google OAuth configuration
    google {
      name: "Google"
      client_id: ""
      client_secret: ""
      server_metadata_url: "https://accounts.google.com/.well-known/openid-configuration"
      client_kwargs {
        scope: "openid email profile"
        prompt: "select_account"
      }
    }
    
    # Example: GitHub OAuth configuration
    github {
      name: "GitHub"
      client_id: ""
      client_secret: ""
      authorize_url: "https://github.com/login/oauth/authorize"
      token_url: "https://github.com/login/oauth/access_token"
      userinfo_url: "https://api.github.com/user"
      userinfo_email_url: "https://api.github.com/user/emails"
      client_kwargs {
        scope: "user:email"
      }
    }
    
    # Example: Microsoft OAuth configuration
    microsoft {
      name: "Microsoft"
      client_id: ""
      client_secret: ""
      server_metadata_url: "https://login.microsoftonline.com/common/v2.0/.well-known/openid-configuration"
      client_kwargs {
        scope: "openid email profile"
      }
    }
  }
  
  # Callback URL - must match the URL in your OAuth provider's configuration
  # Replace with your actual server URL when deploying
  callback_url: "http://localhost:8080/auth/sso/callback"
  
  # Set to true to automatically create a company for new users if company doesn't exist
  auto_create_company: true
  
  # Default company name pattern (used when auto-creating companies)
  # Available variables: {email_domain}, {user_name}
  default_company_name_pattern: "{email_domain} Organization"
  
  # Default role for new users
  # Options: admin, superuser, user, annotator, guest
  default_role: "user"
  
  # Make the first user in a company an admin automatically
  first_user_is_admin: true
}